1:对游戏的窗口进行初始化，设置标题，大小，坐标，窗口的事件的监听

2：游戏菜单的显示，以及游戏菜单的按键的控制
游戏被分成了若干个游戏的状态： gameState
游戏菜单
游戏帮助
游戏关于
游戏中
游戏结束
在不同的状态下，绘制不同的内容，按键有不同的处理的方式

3:调整整个游戏窗口的重绘的机制。
FPS：frame per second
要每秒固定的刷新我们的整个窗口。fps==33帧
每隔30ms 刷新一次（对整个窗口进行重绘）。repaint()
单独启动一个线程用于窗口的重绘。

4: 坦克类的定义，和绘制

5：坦克的四方向行走，以及边界的控制。

6：坦克发射子弹

7: 坦克的绘制使用图片

8: 解决屏幕闪烁的问题  双缓冲解决

9: 子弹的效率问题:
解决方案：使用对象池来解决：提前创建好若干个子弹对象，放到一个容器中。
需要的时候从对象池中拿一个出来使用，当子弹需要被销毁的时候，放回到原来的对象池中。

10：敌人坦克的控制

11: 随机的在屏幕的左上角和右上角产生敌人的坦克

12: 坦克相关的类：父类：Tank 子类：MyTank、 EnemyTank

13: 敌人坦克AI：每隔五秒让敌人坦克随机获得一个状态（站立、行走）
敌人发射子弹的AI：游戏的每一帧都随机（0.05 概率）判断敌人是否发射子弹

14:添加爆炸类，爆炸效果的控制

15：使用对象池来管理爆炸对象

16: 给坦克添加血条和名字

17：敌人的坦克对象池管理

19：自己的坦克死亡的处理，切换游戏状态，游戏结束。
提供两个选项：回到主菜单，退出游戏、重置游戏数据、开始新游戏

20: 地图  地图元素类
设计：上、左右，距离窗口的宽度为1.5倍的坦克宽度。

21：实现一张地图的绘制显示

22:优化了地图随机初始化。子弹和地图碰撞

23：坦克和地图的碰撞

24：敌人坦克和地图的碰撞

25：玩家的老巢,老巢被击毁 游戏结束。延迟若干秒

26：控制玩家的发射炮弹的速度（最小间隔，200毫秒）

27：添加其他种类的地图元素
不可击毁的地图元素
遮挡物

28：添加不同地图的种类

29：添加关卡
关卡的设计：
1：敌人坦克的数量
2：地图元素块的不同的摆放方式
3：敌人坦克的类型不同（随着关卡的增加，难度增大）
4：使用简单的文本来实现关卡的设计（每一关对应一个文本）

30:程序解析关卡信息

31：根据关卡信息，实现当前关卡的结束
根据关卡敌人的类型去创建敌人
关卡难度

32: 添加背景音乐和音效

33 : 添加了游戏信息类，获得了所有的关卡的数量。游戏通关的判断

34：过关判断,通关的处理。

35：切换关卡的处理

36：过关的百叶窗的效果
余下内容同学可以尝试自己完成

37：游戏帮助，游戏关于

38：保存游戏（只保存玩到了第几关），继续游戏可以选择已经通过的个关卡。
还要展示没有通关的关卡，没有通关的关卡是不能选择的。

遇到问题：
1：自己去阅读异常，尝试解决。
2：百度去解决
3：寻求身边的人的帮助
4：找老师
5：将问题写到博客中留念。



